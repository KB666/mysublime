多任务,多线程，多进程
    通俗讲就是开多个软件，多个软件互不影响
    线程就是一个软件可以同时进行多个功能
创建线程：Thread
    面向对象
        定义一个类，继承自threading.Thread,重写一个方法run
        如果需要参数，重写构造方法，重写时注意手动调用父类的构造方法
    面向过程
        t = threading.Thread(target=XXX,name=XXX,args=(XX,XX))
        target 线程启动后要执行的函数
        name 现成的名字
        args 主线程向子线程传递的参数
        t.start() 启动线程
        t.join() 让主线程等待子线程
子线程没结束而子线程先结束是很不安全的
用线程.join()方法等待子线程结束
    线程同步
        线程之间共享全局变量，很容易发生数据紊乱的问题此时
        使用线程锁，跟数据库的锁类似
        创建锁
            suo = threading.Lock()
        上锁
            suo.acquire()
        释放锁
            suo.release()
        队列（queue）
            下载线程和解析线程通过队列进行交互
            q = Queue(5)
            q.put(XXX)如果队列已满，程序卡在这里等待
            q.put(XXX,False)如果已满，直接报错
            q.put(XXX,True,3)如果已满，等待三秒报错
            获取数据
            q.get()参数与put相同

            常用方法
            q.empty()判断是否空
            q.full()判断是否满
            q.qsize()获取队列长度
多线程爬虫
    分析：
    两类线程：下载线程（3）解析线程（3）
    内容队列：下载线程往里面put，解析线程往外面get
    url队列：下载线程从url队列get数据
    写数据：锁